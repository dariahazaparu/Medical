@model Licenta2022.Models.TrimitereForm

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Trimitere</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.IdPacient)
    @Html.HiddenFor(model => model.IdProgramare)

    <script defer>
        var currentDivId = 0;

        // pentru a crea un medicament de la inceput
        window.onload = () => {
            onCreate()
            init()
        }

        const init = () => {
            $(document).on("change", "#select-specializare", function () {
                let availableServices = this.options[$(this).val()].getAttribute("data-servicii").split(",")

                availableServices = availableServices.slice(0, availableServices.length - 1)

                const options = $(".optionServiciu")

                options.each(function (idx, option) {
                    const serviceId = option.getAttribute("data-filter");

                    if (availableServices.includes(serviceId)) {
                        $(option).show()
                    } else {
                        $(option).hide()
                    }
                })

                const selects = $(".serviciu-select")

                selects.each(function (_, select) {
                    const currentValue = $(select).val()

                    if (!availableServices.includes(currentValue)) {
                        $(select).val("")
                    }
                })
            })
        }

        const onDelete = (id) => {
            const element = document.getElementById(id);

            element.parentNode.removeChild(element);
        }

        const onCreate = () => {
            const divMedicamente = $("#servicii");

            const randId = ++currentDivId;
            const selectSpecializare = $('#select-specializare :selected')

            let availableServicesForSelectedSpecialty = selectSpecializare?.attr("data-servicii")?.split(",")

            availableServicesForSelectedSpecialty = availableServicesForSelectedSpecialty?.splice(0, availableServicesForSelectedSpecialty.length - 1)?.map(x => parseInt(x))

            divMedicamente.append(`
                <div class="element-medicament" id="${randId}">
                    <div class="form-group">
                        @Html.LabelFor(model => model.IdServicii, "Serviciu", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <select class="serviciu-select" name="IdServicii[]">
                            <option disabled value="" selected>Selecteaza un serviciu</option>
                        @foreach(var serviciu in ViewBag.Servicii) {
                            <option style="display: ${availableServicesForSelectedSpecialty?.includes(@serviciu.Id) ? 'block' : 'none'}" class="optionServiciu" data-filter="@serviciu.Id" value="@serviciu.Id"> @serviciu.Denumire
                        </option>
                        }
</select>

                        </div>
                    </div>

                    <button style="text - align: right;" type="button" onclick="onDelete(${randId})">Delete</button>
                </div>
    `);

        };

      
    </script>

    <div class="form-group">
        @Html.LabelFor(model => model.Observatii, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Observatii, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Observatii, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.IdSpecializare, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select id="select-specializare" name="IdSpecializare">
                <option value="" selected disabled>Alege o specializare</option>
                @foreach (var specialitate in ViewBag.Specialitati)
                {
                    String ids = "";
                    foreach(var serviciu in specialitate.Servicii)
                    {
                        ids += serviciu.Id + ",";
                    }
                    <option data-servicii="@ids" value="@specialitate.Id">@specialitate.Denumire</option>
                }
            </select>
         
            @Html.ValidationMessage("IdSpecializare", null, new { @class = "text-danger" })
        </div>
    </div>

    <div id="servicii">

    </div>


    <button type="button" onclick="onCreate()">Adauga serviciu</button>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
